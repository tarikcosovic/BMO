// <auto-generated />
using System;
using BMO.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BMO.Api.Migrations
{
    [DbContext(typeof(BmodbContext))]
    partial class BmodbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BMO.Api.Models.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(6974));

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7062));

                    b.Property<string>("ProductionModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Warranty")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e33293d-84d1-406b-ae55-793ed59937d7"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7102),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7102),
                            ProductionModel = "Standard",
                            SoftwareVersion = "2.7.4",
                            Warranty = false
                        },
                        new
                        {
                            Id = new Guid("53116ce8-5619-11ee-8c99-0242ac120002"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7104),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7104),
                            ProductionModel = "Standard",
                            SoftwareVersion = "2.7.4",
                            Warranty = false
                        },
                        new
                        {
                            Id = new Guid("b59f060c-eea2-4d3e-9b5c-4b175a92504f"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7105),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7105),
                            ProductionModel = "Standard",
                            SoftwareVersion = "2.7.4",
                            Warranty = false
                        },
                        new
                        {
                            Id = new Guid("b5e2f724-ec83-4949-a489-8df81aba91ee"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7106),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7106),
                            ProductionModel = "Standard",
                            SoftwareVersion = "2.7.4",
                            Warranty = false
                        },
                        new
                        {
                            Id = new Guid("312f481a-7d97-4905-8aaa-f7a73bd91e6c"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7107),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7107),
                            ProductionModel = "Standard",
                            SoftwareVersion = "2.7.4",
                            Warranty = false
                        },
                        new
                        {
                            Id = new Guid("2a7fe1f3-1883-4587-afb4-26c15b6d8741"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7108),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7108),
                            ProductionModel = "Standard",
                            SoftwareVersion = "2.7.4",
                            Warranty = false
                        },
                        new
                        {
                            Id = new Guid("f11c94c8-08f1-463f-8b04-6f0d080ae94c"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7109),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7109),
                            ProductionModel = "Standard",
                            SoftwareVersion = "2.7.4",
                            Warranty = false
                        },
                        new
                        {
                            Id = new Guid("766c729a-e197-4344-b24a-9a3f3a4da25a"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7110),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7110),
                            ProductionModel = "Standard",
                            SoftwareVersion = "3.0.4",
                            Warranty = false
                        },
                        new
                        {
                            Id = new Guid("8c020a8e-0694-4114-92d3-8791f7929c05"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7111),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7111),
                            ProductionModel = "Standard",
                            SoftwareVersion = "3.0.4",
                            Warranty = false
                        },
                        new
                        {
                            Id = new Guid("5c2f5351-d30a-40fb-9a87-ada20b610c2d"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7112),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7112),
                            ProductionModel = "Standard",
                            SoftwareVersion = "3.0.4",
                            Warranty = false
                        },
                        new
                        {
                            Id = new Guid("28e47bae-64e2-4fbf-9c3a-249dd8bff154"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7112),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7113),
                            ProductionModel = "Premium",
                            SoftwareVersion = "3.0.4",
                            Warranty = true
                        },
                        new
                        {
                            Id = new Guid("12fabb0a-a8da-4884-b062-31950a6ed997"),
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7113),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7114),
                            ProductionModel = "Deluxe",
                            SoftwareVersion = "3.0.4",
                            Warranty = true
                        });
                });

            modelBuilder.Entity("BMO.Api.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7896));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7962));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7989),
                            Description = "An omage to one of the earliest video games released, the goal is to pan across a screen and shoot descending swarms of aliens, preventing them from reaching the bottom of the screen.",
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7989),
                            Name = "Space Invaders"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7990),
                            Description = "The player controls a long, thin creature, resembling a snake, which roams(grid-based) around on a bordered plane, picking up food, trying to avoid hitting its own tail or the edges of the playing area. Each time the snake eats a piece of food, its tail grows longer, making the game increasingly difficult.",
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7991),
                            Name = "Snake"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7991),
                            Description = "World first BMO exclusive original game, specifically created for this game console. Space Worms is a grid-based puzzle, where each players move will take them to the edge of the grid. Collect the treasure to advance to the next level and achieve an all time highscore on the leaderboards!",
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7992),
                            Name = "Space Worms"
                        });
                });

            modelBuilder.Entity("BMO.Api.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7655));

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7736));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7767),
                            DeviceId = new Guid("1e33293d-84d1-406b-ae55-793ed59937d7"),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7768),
                            Username = "sonic86"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7769),
                            DeviceId = new Guid("53116ce8-5619-11ee-8c99-0242ac120002"),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7770),
                            Username = "john doe"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7770),
                            DeviceId = new Guid("b59f060c-eea2-4d3e-9b5c-4b175a92504f"),
                            LastModifiedDate = new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(7771),
                            Username = "replicantroy"
                        });
                });

            modelBuilder.Entity("BMO.Api.Models.Score", b =>
                {
                    b.Property<long>("ScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ScoreId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 18, 12, 58, 45, 349, DateTimeKind.Utc).AddTicks(8580));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ScoreId");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("BMO.Api.Models.Player", b =>
                {
                    b.HasOne("BMO.Api.Models.Device", "Device")
                        .WithMany("Players")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("BMO.Api.Models.Score", b =>
                {
                    b.HasOne("BMO.Api.Models.Game", "Game")
                        .WithMany("Scores")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BMO.Api.Models.Player", "Player")
                        .WithMany("Scores")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("BMO.Api.Models.Device", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("BMO.Api.Models.Game", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("BMO.Api.Models.Player", b =>
                {
                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
